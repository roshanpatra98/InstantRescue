[{"C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\index.js":"1","C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\App.js":"2","C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\ImageUpload.js":"3","C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\firebase.js":"4","C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\Post.js":"5","C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\serviceWorker.js":"6"},{"size":503,"mtime":1606926648476,"results":"7","hashOfConfig":"8"},{"size":6197,"mtime":1606930802106,"results":"9","hashOfConfig":"8"},{"size":2367,"mtime":1606929988762,"results":"10","hashOfConfig":"8"},{"size":703,"mtime":1606930208930,"results":"11","hashOfConfig":"8"},{"size":2654,"mtime":1606926670234,"results":"12","hashOfConfig":"8"},{"size":5086,"mtime":1606926677281,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xth84o",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\index.js",[],["28","29"],"C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\App.js",[],"C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\ImageUpload.js",[],"C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\firebase.js",[],"C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\Post.js",["30","31"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from './firebase'\r\nimport './post.css'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport firebase from 'firebase';\r\n\r\nfunction Post({postId, user, username, caption, imageUrl}) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection('posts')\r\n                .doc(postId)\r\n                .collection('comments')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => doc.data()));\r\n                });\r\n        }\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, {postId});\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n\r\n        db.collection(\"posts\").doc(postId).collection('comments').add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <div className='post' align-item='center'>\r\n            <div className='post_header'>\r\n                <Avatar \r\n                    className = 'post_avatar'\r\n                    alt = {username}\r\n                    src = '/static/images/avatar/1.jpg'        \r\n                />\r\n            <h3>{username}</h3>\r\n            </div>\r\n\r\n            <img className='post_image' src={imageUrl} alt=''/>\r\n            \r\n            <h4 className='post_text'><strong>{username}</strong> {caption}</h4>\r\n\r\n            <div className = \"post_comments\">\r\n                {comments.map((comment) => (\r\n                    <p>\r\n                        <strong>{comment.username}</strong> {comment.text}\r\n                    </p>\r\n                ))}\r\n\r\n            </div>\r\n            {user && (\r\n                <form>\r\n                <input\r\n                    className = 'post_Input'\r\n                    type = 'text'\r\n                    placeholder = 'Add a comment..'\r\n                    value = {comment}\r\n                    onChange = {(e) => setComments(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"post_buttom\"\r\n                    disabled={!comment}\r\n                    type='submit'\r\n                    onClick={postComment}\r\n                >\r\n                Post\r\n                </button>\r\n            </form>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\KIIT\\Documents\\React.JS\\instantrescue\\src\\serviceWorker.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":25,"column":8,"nodeType":"38","endLine":25,"endColumn":16},{"ruleId":"36","severity":1,"message":"39","line":25,"column":8,"nodeType":"38","endLine":25,"endColumn":16,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["43"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [postId]",{"range":"46","text":"47"},[831,839],"[postId]"]